/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package restaurant.management.system;

import javax.swing.JOptionPane;
import java.util.Date;
import java.text.SimpleDateFormat;
import dao.DbOperations;
import java.sql.ResultSet;
import java.util.Calendar;

/**
 *
 * @author Kavini
 */
public class AddReservation extends javax.swing.JFrame {
    public String emailPattern = "^[a-zA-Z0-9]+[@]+[a-zA-Z0-9]+[.]+[a-zA-Z0-9]+$";
    public String mobilePattern = "^[0-9]*$";

    /**
     * Creates new form AddReservation
     */
    public AddReservation() {
        initComponents();
        btnCheckAvailability.setEnabled(false);
        btnSave.setEnabled(false);  
        
        // Set the minimum selectable date to today's date
        jDateChooser2.setMinSelectableDate(new Date());
        
        // Populate the start time combo box
        populateStartTimeSlots();
        
        // Add event listener to start time combo box
        jComboBoxStartTime.addActionListener(evt -> updateEndTimeSlots());
        
        // Add event listener to date chooser
        jDateChooser2.addPropertyChangeListener(evt -> updateStartTimeSlots());
    }
    
    public void validateFields(){
        String name = txtName.getText();
        String email = txtEmail.getText();
        String mobile = txtMobile.getText();
        String tableNo = (String) ComboBoxTableNo.getSelectedItem();
        Date date = jDateChooser2.getDate();
        String startTime = (String) jComboBoxStartTime.getSelectedItem();
        String endTime = (String) jComboBoxEndTime.getSelectedItem();
        if(email.matches(emailPattern) && mobile.matches(mobilePattern) && mobile.length()==10 && !name.equals("") && !tableNo.equals("") && date != null && !startTime.equals("") && !endTime.equals(""))
            btnCheckAvailability.setEnabled(true);
        else
            btnCheckAvailability.setEnabled(false);
    }
    
    private void populateStartTimeSlots() {
        jComboBoxStartTime.removeAllItems();
        for (int i = 8; i <= 19; i++) {
            String hour = String.format("%02d", i);
            jComboBoxStartTime.addItem(hour + ":00");
        }
    }

    private void updateEndTimeSlots() {
        String startTime = (String) jComboBoxStartTime.getSelectedItem();
        if (startTime != null) {
            jComboBoxEndTime.removeAllItems();
            int startHour = Integer.parseInt(startTime.split(":")[0]);
            for (int i = startHour + 1; i <= 20; i++) {
                String hour = String.format("%02d", i);
                jComboBoxEndTime.addItem(hour + ":00");
            }
        }
    }

    private void updateStartTimeSlots() {
        Date selectedDate = jDateChooser2.getDate();
        Date currentDate = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String selectedDateString = sdf.format(selectedDate);
        String currentDateString = sdf.format(currentDate);

        if (selectedDateString.equals(currentDateString)) {
            Calendar calendar = Calendar.getInstance();
            int currentHour = calendar.get(Calendar.HOUR_OF_DAY);
            jComboBoxStartTime.removeAllItems();
            for (int i = Math.max(currentHour + 1, 8); i <= 19; i++) {
                String hour = String.format("%02d", i);
                jComboBoxStartTime.addItem(hour + ":00");
            }
        } else {
            populateStartTimeSlots();
        }
        updateEndTimeSlots();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        SpinnerGuests = new javax.swing.JSpinner();
        ComboBoxTableNo = new javax.swing.JComboBox<>();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        btnCheckAvailability = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxEndTime = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxStartTime = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/new product.png"))); // NOI18N
        jLabel1.setText("New Booking");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, -1));

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1136, 70, 30, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Name :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Email :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Contact Number :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Number of Guests :");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 350, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Table No :");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Date :");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 470, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("End Time :");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 590, -1, -1));

        SpinnerGuests.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));
        getContentPane().add(SpinnerGuests, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 350, 240, -1));

        getContentPane().add(ComboBoxTableNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 410, 240, -1));

        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 170, 240, -1));

        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });
        getContentPane().add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 230, 240, -1));

        txtMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMobileKeyReleased(evt);
            }
        });
        getContentPane().add(txtMobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, 240, -1));

        btnCheckAvailability.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCheckAvailability.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/place order.png"))); // NOI18N
        btnCheckAvailability.setText("Check Availability");
        btnCheckAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckAvailabilityActionPerformed(evt);
            }
        });
        getContentPane().add(btnCheckAvailability, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 650, 190, 30));

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 650, 90, 30));

        jDateChooser2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jDateChooser2KeyReleased(evt);
            }
        });
        getContentPane().add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 470, 240, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/table.jpg"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 240, -1, -1));
        getContentPane().add(jComboBoxEndTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 590, 240, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Start Time : ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 530, -1, -1));
        getContentPane().add(jComboBoxStartTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 530, 240, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/full-page-background.PNG"))); // NOI18N
        jLabel10.setText("jLabel10");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        int a= JOptionPane.showConfirmDialog(null, "Do you want to Close this ?", "Select", JOptionPane.YES_NO_OPTION);
        if(a==0){
            //setVisible(false);
            new SignIn().setVisible(true);
        }
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        // Save reservation to the database.
        String name = txtName.getText();
        String email = txtEmail.getText();
        String mobile = txtMobile.getText();
        int guests = (int) SpinnerGuests.getValue();
        String tableNo = (String) ComboBoxTableNo.getSelectedItem();
        Date date = jDateChooser2.getDate();
        // Get the selected time slot
        String startTime = (String) jComboBoxStartTime.getSelectedItem();
        // Get the selected time slot
        String endTime = (String) jComboBoxEndTime.getSelectedItem();

        // Validation
        if (name.isEmpty() || email.isEmpty() || mobile.isEmpty() || date == null ) {
            JOptionPane.showMessageDialog(null, "All fields are required!");
            return;
        }

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = sdf.format(date);

        String query = "INSERT INTO booking (name, email, mobile, guests, tableNo, date, startTime, endTime) VALUES ('"
                + name + "', '" + email + "', '" + mobile + "', '" + guests + "', '" + tableNo + "', '" + formattedDate + "', '" + startTime + "', '"+ endTime + "')";

        DbOperations.setDataOrDelete(query, "Booking Added Successfully !");
    
        //setVisible(false);
        new SignIn().setVisible(true);
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCheckAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckAvailabilityActionPerformed
        // TODO add your handling code here:
        String tableNo = (String) ComboBoxTableNo.getSelectedItem();
        Date date = jDateChooser2.getDate();
        String startTime = (String) jComboBoxStartTime.getSelectedItem();
        String endTime = (String) jComboBoxEndTime.getSelectedItem();

        if (tableNo == null || date == null || startTime == null || endTime == null) {
            JOptionPane.showMessageDialog(null, "Please select a table, date, and time.");
            return;
        }

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = sdf.format(date);

        String query = "SELECT * FROM booking WHERE tableNo = '" + tableNo + "' AND date = '" + formattedDate + "' AND ("
                + "(startTime <= '" + startTime + "' AND endTime > '" + startTime + "') OR "
                + "(startTime < '" + endTime + "' AND endTime >= '" + endTime + "') OR "
                + "(startTime >= '" + startTime + "' AND endTime <= '" + endTime + "'))";

        ResultSet rs = DbOperations.getData(query);

        try {
            if (rs != null && rs.next()) {
                JOptionPane.showMessageDialog(null, "Table is not available at the selected date and time.");
                btnSave.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Table is Available.");
                btnSave.setEnabled(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCheckAvailabilityActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        // Populate the table numbers from the reservationtable table.
        String query = "SELECT * FROM reservationtable";
        ResultSet rs = DbOperations.getData(query);

        try {
            while (rs.next()) {
                ComboBoxTableNo.addItem(rs.getString("name"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e, "Message", JOptionPane.ERROR_MESSAGE);
        }
        
        for (int i = 8; i <= 19; i++) {
            String hour = String.format("%02d", i);
            jComboBoxStartTime.addItem(hour + ":00");
        }
        
    }//GEN-LAST:event_formComponentShown

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        // TODO add your handling code here:
        validateFields();
    }//GEN-LAST:event_txtEmailKeyReleased

    private void txtMobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMobileKeyReleased
        // TODO add your handling code here:
        validateFields();
    }//GEN-LAST:event_txtMobileKeyReleased

    private void jDateChooser2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jDateChooser2KeyReleased
        // TODO add your handling code here:
        validateFields();
    }//GEN-LAST:event_jDateChooser2KeyReleased

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        // TODO add your handling code here:
        validateFields();
    }//GEN-LAST:event_txtNameKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddReservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddReservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxTableNo;
    private javax.swing.JSpinner SpinnerGuests;
    private javax.swing.JButton btnCheckAvailability;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> jComboBoxEndTime;
    private javax.swing.JComboBox<String> jComboBoxStartTime;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
